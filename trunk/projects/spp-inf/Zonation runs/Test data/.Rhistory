pri.labels <- c("top 5%","top 10%","top 15%","top 30%","rest")
pa.labels <- c("High security","Low security")
PA_pri <- raster(paste0(output_path,"output_PM_PA_",analysis.date,".rank.compressed.tif"))
analysis.date <- '20150424' # remember to update to correct date
PA_pri <- raster(paste0(output_path,"output_PM_PA_",analysis.date,".rank.compressed.tif"))
protected.fraction
curves.PA.High <- read.table(paste0(output_path,"output_PM_PA_High_",analysis.date,".curves.txt"), skip=1, header=F, sep='')
colnames(curves.PA.High) <- c('Prop_landscape_lost', 'cost_needed_for_top_fraction', 'min_prop_rem', 'ave_prop_rem', 'W_prop_rem', 'ext-1', 'ext-2', species)
PA.summary <- data.frame(PA=c("High security","Low security","Total"),PMHC.area=NA,PMHC.prop=NA,RemVeg.area=NA,RemVeg.prop=NA,mask.value=c(3,2,NA))
for(i in 1:2){
PA.summary$PMHC.area[i] <- freq(PA.mask)[PA.summary$mask.value[i],2]
PA.summary$RemVeg.area[i] <- freq(PA.clipping.mask)[PA.summary$mask.value[i],2]
}
PA.clipping.mask <- raster(paste0(input_path,"scenarios/ProtectedAreas_v3_clipped.tif"))
PA.mask <- raster(paste0(input_path,"scenarios/PM_ProtectedAreas_v3.tif"))
for(i in 1:2){
PA.summary$PMHC.area[i] <- freq(PA.mask)[PA.summary$mask.value[i],2]
PA.summary$RemVeg.area[i] <- freq(PA.clipping.mask)[PA.summary$mask.value[i],2]
}
PA.summary$PMHC.area[3] <- sum(freq(PA.mask)[2:3,2])
PA.summary$RemVeg.area[3] <- sum(freq(PA.clipping.mask)[2:3,2])
PA.summary$PMHC.prop <- PA.summary$PMHC.area/sum(freq(PA.mask)[1:3,2])
PA.summary$RemVeg.prop <- PA.summary$RemVeg.area/sum(freq(PA.clipping.mask)[1:3,2])
np <- PA.summary$RemVeg.prop[1]
sf <- PA.summary$RemVeg.prop[2]
protected.fraction <- curves.PA$Prop_landscape_lost[which(abs(curves.PA$Prop_landscape_lost-(1-(np+sf)))==min(abs(curves.PA$Prop_landscape_lost-(1-(np+sf)))))]
curves.PA <- read.table(paste0(output_path,"output_PM_PA_",analysis.date,".curves.txt"), skip=1, header=F, sep='')
colnames(curves.PA) <- c('Prop_landscape_lost', 'cost_needed_for_top_fraction', 'min_prop_rem', 'ave_prop_rem', 'W_prop_rem', 'ext-1', 'ext-2', species)
protected.fraction <- curves.PA$Prop_landscape_lost[which(abs(curves.PA$Prop_landscape_lost-(1-(np+sf)))==min(abs(curves.PA$Prop_landscape_lost-(1-(np+sf)))))]
np.fraction <- curves.PA$Prop_landscape_lost[which(abs(curves.PA$Prop_landscape_lost-(1-(np)))==min(abs(curves.PA$Prop_landscape_lost-(1-(np)))))]
protected.fraction
top.fraction
PA_pri.breaks <- sort(c(0, (protected.fraction-top.fraction), protected.fraction))
PA_breaks <- c(protected.fraction, np.fraction, 1)
PA_pri.unprotected <- PA_pri
PA_pri.unprotected[which(PA_pri.unprotected[] > protected.fraction)] <- NA
PA_pri.protected <- PA_pri
PA_pri.protected[which(PA_pri.protected[] < protected.fraction)] <- NA
PA.high_pri <- raster(paste0(output_path,"output_PM_PA_high_",analysis.date,".rank.compressed.tif"))
PA.high_pri.breaks <- sort(c(0,(np.fraction-top.fraction), np.fraction))
PA.high_breaks <- c(np.fraction, 1)
PA.high_pri.unprotected <- PA.high_pri
PA.high_pri.unprotected[which(PA.high_pri.unprotected[] > np.fraction)] <- NA
PA.high_pri.protected <- PA.high_pri
PA.high_pri.protected[which(PA.high_pri.protected[] < np.fraction)] <- NA
plot(PM.clipping.mask, col=map.background, legend=F, axes=F, box=F)
plot(PA.high_pri, breaks = unique(c(PA.high_pri.breaks,PA.high_breaks)), col=c(pri.col,pa.col[2]), add=T, legend=F,box=F)
plot(PM.shp,add=T)
sf <- raster(paste0(input_path,"scenarios/State_Forests.tif"))
plot(sf)
PA.high_low.security <- PA.high_pri * PA.low
PA.low <- PA.mask
PA.low[PA.low!=2] <- NA
PA.low[!is.na(PA.low)] <- 1
PA.high.protected.mask <- PA.mask
PA.high.protected.mask[PA.high.protected.mask!=3] <- 0
PA.high <- PA.high.protected.mask
PA.high[!is.na(PA.high)] <- 1
PA.high_low.security <- PA.high_pri * PA.low
unprotected.crown.council <- raster(paste0(input_path,"scenarios/Unprotected_Crown_Council_protected_land.tif"))
unprotected.crown.council[unprotected.crown.council==0] <- NA
unprotected.crown.council[!is.na(unprotected.crown.council)] <- 1
PA.high_ccl <- PA.high_pri * unprotected.crown.council
pnf <- raster(paste0(input_path,"scenarios/Private_Native_Forests.tif"))
pnf[pnf==0] <- NA
pnf[!is.na(pnf)] <- 1
PA.high_pnf <- PA.high_pri * pnf
PA.high_pri.breaks
PA.high_breaks
plot(PM.clipping.mask, col=map.background, legend=F, axes=F, box=F)
plot(PA.high_sf, breaks = unique(c(PA.high_pri.breaks,PA.high_breaks)), col=c(pri.col,pa.col[2]), add=T, legend=F, box=F)
plot(PM.shp,add=T)
mtext("A",side=3,line=1,font=2,adj=0)
mtext("State Forests",side=3,line=0,font=1,adj=0,cex=0.8)
PA.high_sf <- PA.high_pri * sf
plot(PA.high_sf, breaks = unique(c(PA.high_pri.breaks,PA.high_breaks)), col=c(pri.col,pa.col[2]), add=T, legend=F, box=F)
# All protected areas
PA_pri <- raster(paste0(output_path,"output_PM_PA_",analysis.date,".rank.compressed.tif"))
# breaks used to categorize cells
PA_pri.breaks <- sort(c(0, (protected.fraction-top.fraction), protected.fraction))
PA_breaks <- c(protected.fraction, np.fraction, 1)
# priority cells outside al protected areas
PA_pri.unprotected <- PA_pri
PA_pri.unprotected[which(PA_pri.unprotected[] > protected.fraction)] <- NA
# protected cells
PA_pri.protected <- PA_pri
PA_pri.protected[which(PA_pri.protected[] < protected.fraction)] <- NA
# high security protected areas only
PA.high_pri <- raster(paste0(output_path,"output_PM_PA_high_",analysis.date,".rank.compressed.tif"))
# breaks used to categorize cells
PA.high_pri.breaks <- sort(c(0,(np.fraction-top.fraction), np.fraction))
PA.high_breaks <- c(np.fraction, 1)
# unprotected cells
PA.high_pri.unprotected <- PA.high_pri
PA.high_pri.unprotected[which(PA.high_pri.unprotected[] > np.fraction)] <- NA
# protected cells
PA.high_pri.protected <- PA.high_pri
PA.high_pri.protected[which(PA.high_pri.protected[] < np.fraction)] <- NA
plot(PA.high_pri)
plot(PM.clipping.mask, col=map.background, legend=F, axes=F, box=F)
plot(PA.high_sf, breaks = unique(c(PA.high_pri.breaks,PA.high_breaks)), col=c(pri.col,pa.col[2]), add=T, legend=F, box=F)
plot(PM.shp,add=T)
plot(PA.high_sf)
sf <- raster(paste0(input_path,"scenarios/State_Forests.tif"))
sf[sf==0] <- NA
sf[!is.na(sf)] <- 1
plot(sf)
PA.high_sf <- PA.high_pri * sf
plot(PM.clipping.mask, col=map.background, legend=F, axes=F, box=F)
plot(PA.high_sf, breaks = unique(c(PA.high_pri.breaks,PA.high_breaks)), col=c(pri.col,pa.col[2]), add=T, legend=F, box=F)
plot(PM.shp,add=T)
png(paste0(output_path,"Expansion_Priorities_within Low security_",analysis.date,"_v2.png"), width = 12, height = 25, units="cm",res=300,bg="transparent",pointsize=11)
par(mfrow=c(3,1), mar=c(0,0,2,0), oma=c(4,0,1,0))
#plot(PM.clipping.mask, col=map.background, legend=F, axes=F, box=F)
#  plot(PA.high_low.security, breaks = unique(c(PA.high_pri.breaks,PA.high_breaks)), col=c(pri.col,pa.col[2]), add=T, legend=F, box=F)
#  plot(PM.shp,add=T)
#  mtext("A",side=3,line=1,font=2,adj=0)
#  mtext("Low security Protected Areas",side=3,line=0,font=1,adj=0,cex=0.8)
plot(PM.clipping.mask, col=map.background, legend=F, axes=F, box=F)
plot(PA.high_sf, breaks = unique(c(PA.high_pri.breaks,PA.high_breaks)), col=c(pri.col,pa.col[2]), add=T, legend=F, box=F)
plot(PM.shp,add=T)
mtext("A",side=3,line=1,font=2,adj=0)
mtext("State Forests",side=3,line=0,font=1,adj=0,cex=0.8)
plot(PM.clipping.mask, col=map.background, legend=F, axes=F, box=F)
plot(PA.high_ccl, breaks = unique(c(PA.high_pri.breaks,PA.high_breaks)), col=c(pri.col,pa.col[2]), add=T, legend=F, box=F)
plot(PM.shp,add=T)
mtext("B",side=3,line=1,font=2,adj=0)
mtext("Unprotected Crown & Council Lands",side=3,line=0,font=1,adj=0,cex=0.8)
plot(PM.clipping.mask, col=map.background, legend=F, axes=F, box=F)
plot(PA.high_pnf, breaks = unique(c(PA.high_pri.breaks,PA.high_breaks)), col=c(pri.col,pa.col[2]), add=T, legend=F, box=F)
plot(PM.shp,add=T)
mtext("C",side=3,line=1,font=2,adj=0)
mtext("Private Native Forests",side=3,line=0,font=1,adj=0,cex=0.8)
legend('bottom', inset=c(0,-0.1), pri.labels, col=rev(pri.col), pch=15, bty="n", title="Expansion priority", cex=1.25, xpd=NA, horiz=T, title.adj=0)
dev.off()
expansion.pri.breaks <- np.fraction - top.fraction
ex.pri.summary <- data.frame(PA.type=c("Low Security","State Forest", "Crown and Council","Private Forest"),expansion.top5.area=NA,expansion.top10.area=NA,expansion.top15.area=NA,expansion.top30.area=NA, expansion.top5=NA,expansion.top10=NA,expansion.top15=NA,expansion.top30=NA)
for (i in (1:length(expansion.pri.breaks))){
pri.area <- sum(((PA.high_pri.unprotected > expansion.pri.breaks[i]))@data@values, na.rm=T)
ex.pri.summary[1,i+1] <- sum(((PA.high_pri.unprotected > expansion.pri.breaks[i]) * PA.low)@data@values, na.rm=T)
ex.pri.summary[2,i+1] <- sum(((PA.high_pri.unprotected > expansion.pri.breaks[i]) * sf)@data@values, na.rm=T)
ex.pri.summary[3,i+1] <- sum(((PA.high_pri.unprotected > expansion.pri.breaks[i]) * unprotected.crown.council)@data@values, na.rm=T)
ex.pri.summary[4,i+1] <- sum(((PA.high_pri.unprotected > expansion.pri.breaks[i]) * pnf)@data@values, na.rm=T)
ex.pri.summary[1,i+5] <- sum(((PA.high_pri.unprotected > expansion.pri.breaks[i]) * PA.low)@data@values, na.rm=T) / pri.area
ex.pri.summary[2,i+5] <- sum(((PA.high_pri.unprotected > expansion.pri.breaks[i]) * sf)@data@values, na.rm=T) / pri.area
ex.pri.summary[3,i+5] <- sum(((PA.high_pri.unprotected > expansion.pri.breaks[i]) * unprotected.crown.council)@data@values, na.rm=T) / pri.area
ex.pri.summary[4,i+5] <- sum(((PA.high_pri.unprotected > expansion.pri.breaks[i]) * pnf)@data@values, na.rm=T)  / pri.area
}
write.csv(ex.pri.summary,paste0(output_path,"expansion_priorities_unprotected_summary_",analysis.date,".csv"),row.names=F)
library(raster)
library(sp)
setwd("C:/Users/hkujala/work/Species influence/src/Zonation runs/Test data")
names <- c('Sp1', 'Sp2', 'Sp3', 'Sp4', 'Sp5', 'Sp6', 'Sp7')
temp.r <- na.omit(as.vector(raster('Species/species1.asc')))
sp_dist_path <- 'Species/species%s.asc'
sp <- c(1:7)
sp_site_m <- matrix(NA, length(temp.r), length(names))
colnames(sp_site_m) <- names
for(i in seq_along(sp)) {
sp_site_m[, i] <- na.omit(as.vector(raster(sprintf(sp_dist_path, i))))
}
head(sp_site_m)
sp_site_m[1,1] > 0.5
sp_site_m[sp_site_m[] > 0.5] <- 1
head(sp_site_m)
sp_site_m[sp_site_m[] < 1] <- 0
head(sp_site_m)
sum(sp_site_m[,1])
sum(sp_site_m[,2])
sum(sp_site_m[,3])
sum(sp_site_m[,4])
sum(sp_site_m[,5])
sum(sp_site_m[,6])
sum(sp_site_m[,7])
cij <- 1-0.5*sum(abs(sp_site_m[, 1]-sp_site_m[, 2]))
sites <- nrow(sp_site_m)
(sum(sp_site_m[, 1])/sites)
(sum(sp_site_m[, 2])/sites)
dim(sp_site_m[sp_site_m[, 1]==1 && sp_site_m[, 2]==1)])
dim(sp_site_m[sp_site_m[, 1]==1 && sp_site_m[, 2]==1])
sp_site_m[sp_site_m[, 1]==1 && sp_site_m[, 2]==1]
sp_site_m[sp_site_m[, 1]==1 && sp_site_m[, 2]==1, 1:2]
sp_site_m[sp_site_m[, 1]==1]
which(sp_site_m[, 1]==1 && sp_site_m[, 2]==1)
View(sp_site_m)
which(sp_site_m[, 1]==1 && sp_site_m[, 6]==1)
sp_site_m[which(sp_site_m[, 1]==1 && sp_site_m[, 6]==1)]
sp_site_m[which(sp_site_m[, 1]==1 & sp_site_m[, 6]==1)]
length(sp_site_m[which(sp_site_m[, 1]==1 & sp_site_m[, 6]==1)])
length(sp_site_m[which(sp_site_m[, 1]==1 & sp_site_m[, 2]==1)])
length(sp_site_m[which(sp_site_m[, 1]==1 & sp_site_m[, 6]==1)])
length(sp_site_m[sp_site_m[, 1]==1 & sp_site_m[, 6]==1])
length(sp_site_m[which(sp_site_m[, 1]==1 & sp_site_m[, 2]==1), c(1,2)])
nrow(sp_site_m[which(sp_site_m[, 1]==1 & sp_site_m[, 2]==1), c(1,2)])
temp <- sp_site_m[which(sp_site_m[, 1]==1 & sp_site_m[, 2]==1), c(1,2)]
View(temp)
temp <- sp_site_m[sp_site_m[, 1]==1 & sp_site_m[, 2]==1, c(1,2)]
nrow(sp_site_m[sp_site_m[, 1]==1 & sp_site_m[, 2]==1, c(1,2)])
(sum(sp_site_m[, 1])/sites)
(nrow(sp_site_m[sp_site_m[, 1]==1 & sp_site_m[, 2]==1, c(1,2)])/sites)
(sum(sp_site_m[, 2])/sites)
(sum(sp_site_m[, 1])/sites) * (sum(sp_site_m[, 2])/sites))
(sum(sp_site_m[, 1])/sites) * (sum(sp_site_m[, 2])/sites)
((nrow(sp_site_m[sp_site_m[, 1]==1 & sp_site_m[, 2]==1, c(1,2)])/sites) - ((sum(sp_site_m[, 1])/sites) * (sum(sp_site_m[, 2])/sites)))
((sum(sp_site_m[, 1])/sites) * (sum(sp_site_m[, 2])/sites))
install.packages('species.dist')
?species.dist
?species.dist()
??species.dist
install.packages("picante")
library(picante)
species.dist
species.dist(sp_site_m[, 1], sp_site_m[, 2], metric = c("cij", "jaccard", "checkerboard", "doij"))
species.dist(sp_site_m[, 1:2], metric = c("cij", "jaccard", "checkerboard", "doij"))
species.dist(sp_site_m[, 1:2], metric = 'cij')
species.dist(sp_site_m[, 1:2], metric = 'jaccard')
species.dist(sp_site_m[, 1:2], metric = 'checkerboard')
species.dist(sp_site_m[, 1:2], metric = 'doij')
((nrow(sp_site_m[sp_site_m[, 1]==1 & sp_site_m[, 2]==1, c(1,2)])/sites) - ((sum(sp_site_m[, 1])/sites) * (sum(sp_site_m[, 2])/sites))) / ((sum(sp_site_m[, 1])/sites) * (sum(sp_site_m[, 2])/sites))
species.dist(sp_site_m, metric = 'doij')
species.dist(sp_site_m, metric = 'jaccard')
species.dist(sp_site_m, metric = 'jaccard')[1]
species.dist(sp_site_m, metric = 'jaccard')[2]
species.dist(sp_site_m, metric = 'jaccard')[7]
species.dist(sp_site_m, metric = 'jaccard')@Sp1
species.dist(sp_site_m, metric = 'jaccard')$Sp1
temp <- species.dist(sp_site_m, metric = 'jaccard')
temp$Sp1
temp[[Sp1]]
temp[Sp1
]
temp[temp=='Sp1']
temp
summary(temp)
temp[]
temp@Labels@Sp1
temp[Labels == 'Sp1']
temp$Labels == 'Sp1'
dim(temp)
nrow(temp)
length(temp)
class(temp)
as.matrix(species.dist(sp_site_m, metric = 'jaccard'))
temp <- as.matrix(species.dist(sp_site_m, metric = 'jaccard'))
diag(temp) <- NA
temp
mean(temp[,1], na.rm=T)
results <- data.frame(names,NA)
colnames(results) <- c('Species', 'mean_jaccard_distance')
for (i in 1:length(names)){
results[i,2] <- mean(temp[,i], na.rm=T)
}
View(results)
sp_info <- data.frame(names,NA)
sp_info <- data.frame(sp=names, dist_sum=NA, dist_richness=NA, mean_jaccard_distance=NA)
sp_info$dist_sum <- read.table('Output/out_all.features_info.txt', skip=1, header=T, sep='')[,2]
View(sp_info)
cooc <- as.matrix(species.dist(sp_site_m, metric = 'jaccard'))  # creates a co-occurrence matrix, metric options: c("cij", "jaccard", "checkerboard", "doij")
diag(cooc) <- NA # change diagonal values to NA
for (i in 1:length(names)){
sp_info$mean_jaccard_distance[i] <- mean(cooc[,i], na.rm=T)
}
View(sp_info)
sum(sp_site_m[,1])
sum(sp_site_m[,2])
sum(sp_site_m[,3])
sum(sp_site_m[,4])
sum(sp_site_m[,5])
sum(sp_site_m[,6])
sum(sp_site_m[,7])
apply(sp_site_m[sp_site_m[,1]==1], 'sum', 1)
rowSum(sp_site_m[sp_site_m[,1]==1])
?apply
apply(sp_site_m[sp_site_m[,1]==1], 1, fun='sum')
apply(sp_site_m[sp_site_m[,1]==1], 1, sum)
apply(sp_site_m[sp_site_m[,1]==1,], 1, sum)
mean(apply(sp_site_m[sp_site_m[,1]==1,], 1, sum)-1)
for (i in 1:length(names)){
sp_info$mean_jaccard_distance[i] <- mean(apply(sp_site_m[sp_site_m[,i]==1,], 1, sum)-1)
}
View(sp_site_m)
i
mean(apply(sp_site_m[sp_site_m[,i]==1,], 1, sum)-1)
sp_info <- data.frame(sp=names, dist_sum=NA, dist_richness=NA, mean_jaccard_distance=NA)
sp_info$dist_sum <- read.table('Output/out_all.features_info.txt', skip=1, header=T, sep='')[,2]
for (i in 1:length(names)){
sp_info$dist_richness[i] <- mean(apply(sp_site_m[sp_site_m[,i]==1,], 1, sum)-1)
}
View(sp_info)
cooc <- as.matrix(species.dist(sp_site_m, metric = 'jaccard'))  # creates a co-occurrence matrix, metric options: c("cij", "jaccard", "checkerboard", "doij")
diag(cooc) <- NA # change diagonal values to NA
for (i in 1:length(names)){
sp_info$mean_jaccard_distance[i] <- mean(cooc[,i], na.rm=T)
}
View(sp_info)
save(sp_info, file='C:/Users/hkujala/work/Species influence/src/sp_info.r')
results <- data.frame(names,NA)
colnames(results) <- c('Species', 'Rank_diff')
out_all <- raster('Output/out_all.rank.asc')
for (i in 1:length(names)){
out_1missing <- raster(paste0('Output/out_missing', names[i], '.rank.asc'))
diff <- out_all - out_1missing
results[i,2] <- sum(abs(getValues(diff)), na.rm=T)
}
results_all <- results
colnames(results) <- c('Species', 'AUC_sum')
for (i in 1:length(names)){
curves_1missing <- read.table(paste0('Output/out_missing', names[i], '.curves.txt'), skip=1, header=F, sep='')[, c(1,8:(7+length(names)-1))]
auc <- 0
for (j in 1:(length(names)-1)){
auc <- auc + trapz(curves_1missing[,1], curves_1missing[,1+j])
}
results[i,2] <- auc
}
library(pracma)
results <- data.frame(names,NA)
colnames(results) <- c('Species', 'AUC_sum')
for (i in 1:length(names)){
curves_1missing <- read.table(paste0('Output/out_missing', names[i], '.curves.txt'), skip=1, header=F, sep='')[, c(1,8:(7+length(names)-1))]
auc <- 0
for (j in 1:(length(names)-1)){
auc <- auc + trapz(curves_1missing[,1], curves_1missing[,1+j])
}
results[i,2] <- auc
}
results_all$AUC_sum <- results[,2]
View(results_all)
plot(results_all$Rank_diff, species_info[,2:4])
plot(results_all$Rank_diff, sp_info[,2:4])
plot(results_all$Rank_diff, sp_info$dist_sum)
plot(sp_info$dist_sum, results_all$Rank_diff)
colSum(sp_site_m)
apply(sp_site_m, 2, sum)
plot(apply(sp_site_m, 2, sum), results_all$Rank_diff)
plot(sp_info$dist_richness, results_all$Rank_diff)
plot(sp_info$mean_jaccardan, results_all$Rank_diff)
plot(sp_info$mean_jaccard_distance, results_all$Rank_diff)
species.dist
vegdist
sp_info <- data.frame(sp=names, dist_sum=NA, dist_richness=NA, mean_jaccard_similarity=NA)
sp_info$dist_sum <- read.table('Output/out_all.features_info.txt', skip=1, header=T, sep='')[,2]
for (i in 1:length(names)){
sp_info$dist_richness[i] <- mean(apply(sp_site_m[sp_site_m[,i]==1,], 1, sum)-1)
}
cooc <- as.matrix(species.dist(sp_site_m, metric = 'jaccard'))  # creates a co-occurrence matrix, metric options: c("cij", "jaccard", "checkerboard", "doij")
diag(cooc) <- NA # change diagonal values to NA
for (i in 1:length(names)){
sp_info$mean_jaccard_distance[i] <- mean(cooc[,i], na.rm=T)
}
save(sp_info, file='C:/Users/hkujala/work/Species influence/src/sp_info.r')
plot(sp_info$dist_sum, sp_info$dist_richness)
plot(sp_info$dist_sum, sp_info$dist_richness, ylim=c(0.1,2.2))
points(sp_info$dist_sum, sp_info$mean_jaccard_similarity, col='red', pch=19)
View(sp_info)
sp_info <- data.frame(sp=names, dist_sum=NA, dist_richness=NA, mean_jaccard_similarity=NA)
sp_info$dist_sum <- read.table('Output/out_all.features_info.txt', skip=1, header=T, sep='')[,2]
for (i in 1:length(names)){
sp_info$dist_richness[i] <- mean(apply(sp_site_m[sp_site_m[,i]==1,], 1, sum)-1)
}
cooc <- as.matrix(species.dist(sp_site_m, metric = 'jaccard'))  # creates a co-occurrence matrix, metric options: c("cij", "jaccard", "checkerboard", "doij")
diag(cooc) <- NA # change diagonal values to NA
for (i in 1:length(names)){
sp_info$mean_jaccard_similarity[i] <- mean(cooc[,i], na.rm=T)
}
save(sp_info, file='C:/Users/hkujala/work/Species influence/src/sp_info.r')
points(sp_info$dist_sum, sp_info$mean_jaccard_similarity, col='red', pch=19)
save(results_all, file='C:/Users/hkujala/work/Species influence/src/sp_influence.r')
par(mfrow=c(1,2))
plot(sp_info$dist_sum, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_distance, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Mean Jaccard similarity', pch=19)
par(mfrow=c(2,2))
plot(sp_info$dist_sum, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Mean Jaccard similarity', pch=19)
par(mfrow=c(2,2), mar=c(5,1,1,3))
plot(sp_info$dist_sum, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Mean Jaccard similarity', pch=19)
par(mfrow=c(2,2), mar=c(4,4,1,1))
plot(sp_info$dist_sum, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$Rank_diff, ylab='Absolute difference in ranks', xlab='Mean Jaccard similarity', pch=19)
par(mfrow=c(2,2), mar=c(4,2,1,1), oma=c(0,3,0,0))
plot(sp_info$dist_sum, results_all$Rank_diff, ylab='', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$Rank_diff, ylab='', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$Rank_diff, ylab='', xlab='Mean Jaccard similarity', pch=19)
mtext('Absolute difference in ranks', 1)
par(mfrow=c(2,2), mar=c(4,2,1,1), oma=c(0,3,0,0))
plot(sp_info$dist_sum, results_all$Rank_diff, ylab='', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$Rank_diff, ylab='', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$Rank_diff, ylab='', xlab='Mean Jaccard similarity', pch=19)
mtext('Absolute difference in ranks', 2)
text('Absolute difference in ranks', 2)
mtext('Absolute difference in ranks', 2, lines=-2)
?mtext
mtext('Absolute difference in ranks', 2, outer=T)
mtext('Absolute difference in ranks', 2, outer=T, line=2)
mtext('Absolute difference in ranks', 2, outer=T, line=1)
par(mfrow=c(2,2), mar=c(4,2,1,1), oma=c(0,3,0,0))
plot(sp_info$dist_sum, results_all$Rank_diff, ylab='', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$Rank_diff, ylab='', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$Rank_diff, ylab='', xlab='Mean Jaccard similarity', pch=19)
mtext('Absolute difference in ranks', 2, outer=T, line=1)
png("Absolute difference in ranks.png"),height=12,width=15,units="cm",res=300, bg="transparent",pointsize=11)
par(mfrow=c(2,2), mar=c(4,2,1,1), oma=c(0,3,0,0))
plot(sp_info$dist_sum, results_all$Rank_diff, ylab='', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$Rank_diff, ylab='', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$Rank_diff, ylab='', xlab='Mean Jaccard similarity', pch=19)
mtext('Absolute difference in ranks', 2, outer=T, line=1)
dev.off()
png("Absolute difference in ranks.png", height=12, width=15, units="cm", res=300, bg="transparent", pointsize=11)
par(mfrow=c(2,2), mar=c(4,2,1,1), oma=c(0,3,0,0))
plot(sp_info$dist_sum, results_all$Rank_diff, ylab='', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$Rank_diff, ylab='', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$Rank_diff, ylab='', xlab='Mean Jaccard similarity', pch=19)
mtext('Absolute difference in ranks', 2, outer=T, line=1)
dev.off()
View(results_all)
par(mfrow=c(2,2), mar=c(4,2,1,1), oma=c(0,3,0,0))
plot(sp_info$dist_sum, results_all$AUC_sum, ylab='', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$AUC_sum, ylab='', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$AUC_sum, ylab='', xlab='Mean Jaccard similarity', pch=19)
mtext('Sum of AUCs', 2, outer=T, line=1)
png("Sum of AUCs.png", height=12, width=15, units="cm", res=300, bg="transparent", pointsize=11)
par(mfrow=c(2,2), mar=c(4,2,1,1), oma=c(0,3,0,0))
plot(sp_info$dist_sum, results_all$AUC_sum, ylab='', xlab='Distribution sum', pch=19)
plot(sp_info$dist_richness, results_all$AUC_sum, ylab='', xlab='Average sp richness within distribution', pch=19)
plot(sp_info$mean_jaccard_similarity, results_all$AUC_sum, ylab='', xlab='Mean Jaccard similarity', pch=19)
mtext('Sum of AUCs', 2, outer=T, line=1)
dev.off()
files <- list.files('C:/Users/hkujala/work/Species influence/src/Species/')
sp_dist_path <- 'C:/Users/hkujala/work/Species influence/src/Species/'
par(mfrow=c(2,4))
for (i in sq_along(files)){
plot(paste0(sp_dist_path, files[i]), main=pate0('Sp', i))
}
for (i in seq_along(files)){
plot(raster(paste0(sp_dist_path, files[i])), main=paste0('Sp', i))
}
plot(raster(paste0(sp_dist_path, files[i])), box=F, main=paste0('Sp', i))
par(mfrow=c(2,4), mar=c(0,0.25,0,0), oma=c(0,0,0,0))
plot(raster(paste0(sp_dist_path, files[i])), legend=F, box=F, axes=F, main=paste0('Sp', i))
plot(trim(raster(paste0(sp_dist_path, files[i]))), legend=F, box=F, axes=F, main=paste0('Sp', i))
par(mfrow=c(2,4), mar=c(0,0.25,1,0), oma=c(0,0,0,0))
plot(trim(raster(paste0(sp_dist_path, files[i]))), legend=F, box=F, axes=F, main=paste0('Sp', i))
par(mfrow=c(2,4), mar=c(0,0.25,1,0), oma=c(0,0,0,0))
for (i in seq_along(files)){
plot(trim(raster(paste0(sp_dist_path, files[i]))), legend=F, box=F, axes=F, main=paste0('Sp', i))
}
png("Species distributions.png"),height=10,width=15,units="cm",res=300, bg="transparent",pointsize=11)
par(mfrow=c(2,4), mar=c(0,0.25,1,0), oma=c(0,0,0,0))
for (i in seq_along(files)){
plot(trim(raster(paste0(sp_dist_path, files[i]))), legend=F, box=F, axes=F, main=paste0('Sp', i))
}
dev.off()
png("Species distributions.png",height=10, width=15, units="cm", res=300, bg="transparent", pointsize=11)
par(mfrow=c(2,4), mar=c(0,0.25,1,0), oma=c(0,0,0,0))
for (i in seq_along(files)){
plot(trim(raster(paste0(sp_dist_path, files[i]))), legend=F, box=F, axes=F, main=paste0('Sp', i))
}
dev.off()
par(mfrow=c(1,1))
plot(trim(raster(paste0(sp_dist_path, files[i]))))
png("Species distributions.png",height=8, width=15, units="cm", res=300, bg="transparent", pointsize=11)
par(mfrow=c(2,4), mar=c(0,0.25,1,0), oma=c(0,0,0,0))
for (i in seq_along(files)){
plot(trim(raster(paste0(sp_dist_path, files[i]))), legend=F, box=F, axes=F, main=paste0('Sp', i))
}
dev.off()
par(mfrow=c(2,4), mar=c(0,0.25,1,0), oma=c(0,0,0,0))
for (i in seq_along(files)){
plot(trim(raster(paste0(sp_dist_path, files[i]))), legend=F, box=F, axes=F, main=paste0('Sp', i))
}
plot(raster(paste0(sp_dist_path, files[i])), legend.only=T)
?plot
plot(raster(paste0(sp_dist_path, files[i])), legend.only=T, side=4)
plot(raster(paste0(sp_dist_path, files[i])), legend.only=T, zlim(10, -10))
plot(raster(paste0(sp_dist_path, files[i])), legend.only=T, zlim=c(-10, 10))
r <- raster(paste0(sp_dist_path, files[1]))
r.range <- c(minValue(r), maxValue(r))
min(r)
min(r[], na.rm=T)
r.range <- c(min(r[], na.rm=T), max(r[], na.rm=T))
plot(raster(paste0(sp_dist_path, files[i])), legend.only=T, legend.width=1,
axis.args=list(at=seq(r.range[1], r.range[2], 25),
labels=seq(r.range[1], r.range[2], 25),
cex.axis=0.6),
legend.args=list(text='Probability of occurrence', side=4, font=2, line=2.5, cex=0.8))
par(mfrow=c(2,4), mar=c(0,0.25,1,0), oma=c(0,0,0,0))
for (i in seq_along(files)){
plot(trim(raster(paste0(sp_dist_path, files[i]))), legend=F, box=F, axes=F, main=paste0('Sp', i))
}
plot(raster(paste0(sp_dist_path, files[i])), legend.only=T, legend.width=1,
axis.args=list(at=seq(0, 1, 0.2),
labels=seq(0, 1, 0.2),
cex.axis=0.6),
legend.args=list(text='Probability of occurrence', side=4, font=2, line=2.5, cex=0.8))
plot(raster(paste0(sp_dist_path, files[i])), legend.only=T, legend.width=2, line=2.5
axis.args=list(at=seq(0, 1, 0.2),
labels=seq(0, 1, 0.2),
cex.axis=0.6),
legend.args=list(text='Probability of occurrence', side=4, font=2, line=4.5))
plot(raster(paste0(sp_dist_path, files[i])), legend.only=T, legend.width=2, line=2.5,
axis.args=list(at=seq(0, 1, 0.2),
labels=seq(0, 1, 0.2),
cex.axis=0.6),
legend.args=list(text='Probability of occurrence', side=4, font=2, line=4.5))
?legend
list(at=seq(0, 1, 0.2),
labels=seq(0, 1, 0.2)
)
